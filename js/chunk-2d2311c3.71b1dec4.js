(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-2d2311c3"],{eec0:function(n,t,o){"use strict";o.r(t);var e=function(){var n=this,t=n.$createElement,o=n._self._c||t;return o("div",{directives:[{name:"t9n",rawName:"v-t9n",value:"docs",expression:"'docs'"}],staticClass:"plugin"},[o("Code",{attrs:{source:"install"}}),o("p",[n._v("Создание контрола на основе React компонента")]),o("Code",{attrs:{source:"create_control"}}),o("p",[n._v("Кастомизация узлов. Кастомный узел создается в виде React компонента")]),o("Code",{attrs:{source:"custom_node"}}),o("p",[n._v("Он может быть передан в свойство component при подключении плагина")]),o("Code",{attrs:{source:"global_node"}}),o("p",[n._v("или в определенный компонент"),o("Code",{attrs:{source:"component_node"}})],1),n._m(0)],1)},s=[function(){var n=this,t=n.$createElement,o=n._self._c||t;return o("p",[o("a",{attrs:{href:"https://codesandbox.io/s/retejs-react-render-t899c"}},[n._v("Пример")])])}],c=o("2877"),i=function(n){n.options.code||(n.options.code={}),n.options.code["install"]="import ReactRenderPlugin from 'rete-react-render-plugin';\n\neditor.use(ReactRenderPlugin);"},r=i,p=function(n){n.options.code||(n.options.code={}),n.options.code["create_control"]="class MyReactControl extends React.Component {\n\n  componentDidMount() {\n      // this.props.getData\n      // this.props.putData\n  }\n\n  render() {\n    return (\n        <div>Hello ${this.props.name}!</div>\n    )\n  }\n}\n\nclass MyControl extends Rete.Control {\n  constructor(emitter, key, name) {\n    super(key);\n    this.render = 'react';\n    this.component = MyReactControl;\n    this.props = { emitter, name };\n  }\n}"},d=p,u=function(n){n.options.code||(n.options.code={}),n.options.code["custom_node"]='import ReactRenderPlugin, { Node, Socket, Control } from \'rete-react-render-plugin\';\n\nexport class MyNode extends Node {\n  render() {\n    const { node, bindSocket, bindControl } = this.props;\n    const { outputs, controls, inputs, selected } = this.state;\n\n    return (\n      <div className={`node ${selected}`}>\n        <div className="title">{node.name}</div>\n        {/* Outputs */}\n        {outputs.map((output) => (\n          <div className="output" key={output.key}>\n            <div className="output-title">{output.name}</div>\n            <Socket type="output" socket={output.socket} io={output} innerRef={bindSocket} />\n          </div>\n        ))}\n        {/* Controls */}\n        {controls.map(control => (\n          <Control className="control" key={control.key} control={control} innerRef={bindControl} />\n        ))}\n        {/* Inputs */}\n        {inputs.map(input => (\n          <div className="input" key={input.key}>\n            <Socket type="input" socket={input.socket} io={input} innerRef={bindSocket} />\n            {!input.showControl() && <div className="input-title">{input.name}</div>}\n            {input.showControl() && <Control className="input-control" control={input.control} innerRef={bindControl} />}\n          </div>\n        ))}\n      </div>\n    )\n  }\n}'},a=u,l=function(n){n.options.code||(n.options.code={}),n.options.code["global_node"]="editor.use(ReactRenderPlugin, {\n    component: MyNode\n}"},m=l,f=function(n){n.options.code||(n.options.code={}),n.options.code["component_node"]='class AddComponent extends Rete.Component {\n  constructor() {\n    super("Add");\n    this.data.component = MyNode;\n  }\n// ...'},v=f,C={},k=Object(c["a"])(C,e,s,!1,null,null,null);"function"===typeof r&&r(k),"function"===typeof d&&d(k),"function"===typeof a&&a(k),"function"===typeof m&&m(k),"function"===typeof v&&v(k);t["default"]=k.exports}}]);